/* THIS FILE WAS GENERATED BY GRAPHQL CODE GENERATOR. DO NOT EDIT. */
import * as Types from '../../schema/generated/types';

import { DetailProgramFieldsFragment } from '../../fragments/generated/DetailProgramFields.gql.generated';
import * as Operations from '../GetDetailPrograms.gql';
import * as ApolloReactCommon from '@apollo/react-common';
import * as ApolloReactHooks from '@apollo/react-hooks';

export type GetDetailProgramsQueryVariables = Types.Exact<{
  trainerOrganizationID: Types.Scalars['ID'];
  first: Types.Scalars['Int'];
}>;

export type GetDetailProgramsQuery = { __typename?: 'Query' } & {
  workoutProgramSearch?: Types.Maybe<
    { __typename?: 'WorkoutProgramSearchResults' } & {
      results: { __typename?: 'WorkoutProgramConnection' } & Pick<Types.WorkoutProgramConnection, 'totalCount'> & {
          edges: Array<
            { __typename?: 'WorkoutProgramEdge' } & {
              node: { __typename?: 'WorkoutProgram' } & DetailProgramFieldsFragment;
            }
          >;
        };
    }
  >;
};

/**
 * __useGetDetailProgramsQuery__
 *
 * To run a query within a React component, call `useGetDetailProgramsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetDetailProgramsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetDetailProgramsQuery({
 *   variables: {
 *      trainerOrganizationID: // value for 'trainerOrganizationID'
 *      first: // value for 'first'
 *   },
 * });
 */
export function useGetDetailProgramsQuery(
  baseOptions?: ApolloReactHooks.QueryHookOptions<GetDetailProgramsQuery, GetDetailProgramsQueryVariables>
) {
  return ApolloReactHooks.useQuery<GetDetailProgramsQuery, GetDetailProgramsQueryVariables>(
    Operations.GetDetailPrograms,
    baseOptions
  );
}
export function useGetDetailProgramsLazyQuery(
  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<GetDetailProgramsQuery, GetDetailProgramsQueryVariables>
) {
  return ApolloReactHooks.useLazyQuery<GetDetailProgramsQuery, GetDetailProgramsQueryVariables>(
    Operations.GetDetailPrograms,
    baseOptions
  );
}
export type GetDetailProgramsQueryHookResult = ReturnType<typeof useGetDetailProgramsQuery>;
export type GetDetailProgramsLazyQueryHookResult = ReturnType<typeof useGetDetailProgramsLazyQuery>;
export type GetDetailProgramsQueryResult = ApolloReactCommon.QueryResult<
  GetDetailProgramsQuery,
  GetDetailProgramsQueryVariables
>;
